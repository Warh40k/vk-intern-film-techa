version: '3.8'

volumes:
  pgdata:
    driver: local
  pgadmin:
    driver: local

services:
  db:
    container_name: filmotecka-db
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/utils/postgresql/data
    env_file:
      - .env
  swagger:
    container_name: filmootecka-swagger
    image: swaggerapi/swagger-ui
    restart: always
    ports:
      - "8000:8080"
    volumes:
      - ./docs:/docs
    environment:
      - SWAGGER_JSON=/docs/swagger.json

  migrate:
    image: migrate/migrate
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./schema/postgres:/migrations
    command: [ "-path", "/migrations", "-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable", "up" ]
    depends_on:
      - db
    links:
      - db
  app:
    container_name: filmotecka-app
    restart: on-failure
    depends_on:
      - db
    image: filmotecka:latest
    ports:
      - "8080:8080"
    volumes:
      - ./configs:/app/configs/
    env_file:
      - .env

#  pgadmin:
#    container_name: filmotecka-pgadmin
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-nikita@mail.ru}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-projector}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#      - ./schema/ers:/ers
#
#    ports:
#      - "${PGADMIN_PORT:-5051}:80"
#    restart: unless-stopped